{"mappings":"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","sources":["src/js/handlers/usernameHandler.js","src/js/handlers/passwordHandler.js","src/js/handlers/passwordConfirmationHandler.js","src/js/selectors/domSelectors.js","src/js/editUsername.js","src/js/handlers/toggleShowPasswordHandler.js","src/js/handlers/buttonHandler.js"],"sourcesContent":["const usernameInputHandler = (field, usernameForm, formInputState) => {\r\n  if (field.value.length >= 8 && field.value.length <= 16) {\r\n    usernameForm.children[0].style = \"color: rgb(52,199,89)\";\r\n    usernameForm.children[2].innerText = \"Username is in the correct format\";\r\n    formInputState.username = true;\r\n  } else if (field.value.length == 0) {\r\n    usernameForm.children[0].style = \"color:rgb(0,122,255)\";\r\n    usernameForm.children[2].innerText = \"example format : johndoe@email.com\";\r\n    formInputState.username = false;\r\n  } else {\r\n    usernameForm.children[0].style = \"color:rgb(255,59,48)\";\r\n    usernameForm.children[2].innerText = field.validationMessage;\r\n    formInputState.username = false;\r\n  }\r\n};\r\n\r\nexport { usernameInputHandler };\r\n","const passwordStatehandler = (args) => {\r\n  const { form, message, formInputState, callback } = args;\r\n\r\n  return (e) => {\r\n    if (e.target.validity.valid) {\r\n      form.children[0].style = \"color: rgb(52,199,89)\";\r\n      form.children[2].innerText = message;\r\n      formInputState[e.target.id] = true;\r\n    } else if (e.target.value.length == 0) {\r\n      form.children[0].style = \"color:rgb(0,122,255)\";\r\n      form.children[2].innerText =\r\n        \"Must be 8-32 characters containing at least one number, one capital letter and any of the following characters !@#$%^&*.\";\r\n      formInputState[e.target.id] = false;\r\n    } else {\r\n      form.children[0].style = \"color:rgb(255,59,48)\";\r\n      form.children[2].innerText =\r\n        \"Must be 8-32 characters containing at least one number, one capital letter and any of the following characters !@#$%^&*.\";\r\n      formInputState[e.target.id] = false;\r\n    }\r\n\r\n    if (callback) {\r\n      callback();\r\n    }\r\n  };\r\n};\r\n\r\nexport { passwordStatehandler };\r\n","const passwordConfirmationHandler = (\r\n  passwordInput,\r\n  passwordConfirmationInput,\r\n  errorContainer\r\n) => {\r\n  return () => {\r\n    if (passwordInput.value !== passwordConfirmationInput.value) {\r\n      errorContainer.style.visibility = \"visible\";\r\n    } else {\r\n      errorContainer.style.visibility = \"hidden\";\r\n    }\r\n  };\r\n};\r\n\r\nexport { passwordConfirmationHandler };\r\n","const signupForm = document.getElementById(\"signup-form\");\r\nconst loginForm = document.getElementById(\"login-form\");\r\nconst forgotPasswordForm = document.getElementById(\"forgot-password-form\");\r\n\r\nconst editUsernameForm = document.getElementById(\"edit-username-form\");\r\n\r\nconst editEmailForm = document.getElementById(\"edit-email-form\");\r\n\r\nconst editPasswordForm = document.getElementById(\"edit-password-form\");\r\n\r\nconst formLabel = document.querySelector(\".form-label-container p\");\r\n\r\nconst emailForm = document.getElementById(\"email-form-element\");\r\n\r\nconst usernameForm = document.getElementById(\"username-form-element\");\r\n\r\nconst currentPasswordForm = document.getElementById(\r\n  \"current-password-form-element\"\r\n);\r\n\r\nconst passwordForm = document.getElementById(\"password-form-element\");\r\n\r\nconst passwordConfirmationForm = document.getElementById(\r\n  \"passwordConfirmation-form-element\"\r\n);\r\n\r\nconst emailInput = document.getElementById(\"email\");\r\n\r\nconst usernameInput = document.getElementById(\"username\");\r\n\r\nconst currentPasswordInput = document.getElementById(\"currentPassword\");\r\n\r\nconst passwordInput = document.getElementById(\"password\");\r\n\r\nconst passwordConfirmationInput = document.getElementById(\r\n  \"passwordConfirmation\"\r\n);\r\n\r\nconst errorContainer = document.getElementById(\"error-container\");\r\nconst submitButton = document.querySelector(\"button\");\r\n\r\nexport {\r\n  signupForm,\r\n  loginForm,\r\n  forgotPasswordForm,\r\n  editUsernameForm,\r\n  editPasswordForm,\r\n  currentPasswordForm,\r\n  usernameForm,\r\n  editEmailForm,\r\n  formLabel,\r\n  emailForm,\r\n  passwordForm,\r\n  passwordConfirmationForm,\r\n  emailInput,\r\n  currentPasswordInput,\r\n  usernameInput,\r\n  passwordInput,\r\n  passwordConfirmationInput,\r\n  errorContainer,\r\n  submitButton,\r\n};\r\n","import { usernameInputHandler } from \"./handlers/usernameHandler.js\";\r\n\r\nimport { passwordStatehandler } from \"./handlers/passwordHandler.js\";\r\n\r\nimport { toggleShowPasswordHandler } from \"./handlers/toggleShowPasswordHandler\";\r\n\r\nimport { passwordConfirmationHandler } from \"./handlers/passwordConfirmationHandler.js\";\r\n\r\nimport { buttonHandler } from \"./handlers/buttonHandler.js\";\r\n\r\nimport {\r\n  editUsernameForm,\r\n  formLabel,\r\n  usernameForm,\r\n  passwordForm,\r\n  passwordConfirmationForm,\r\n  usernameInput,\r\n  passwordInput,\r\n  passwordConfirmationInput,\r\n  errorContainer,\r\n  submitButton,\r\n} from \"./selectors/domSelectors.js\";\r\n\r\nconst formInputState = {\r\n  username: false,\r\n  password: false,\r\n  passwordConfirmation: false,\r\n};\r\n\r\n// Toggles show password\r\ntoggleShowPasswordHandler(document.querySelectorAll(\".password-field-element\"));\r\n\r\n// Gets email from local storage and handles input\r\nif (\r\n  localStorage.getItem(\"username\") &&\r\n  localStorage.getItem(\"username\").length >= 1\r\n) {\r\n  usernameInput.value = localStorage.getItem(\"username\");\r\n  usernameInputHandler(usernameInput, usernameForm, formInputState);\r\n}\r\n\r\n// Sets email to local storage and handles input\r\nconst usernameStateHandler = (e) => {\r\n  localStorage.setItem(\"username\", e.target.value);\r\n  usernameInputHandler(e.target, usernameForm, formInputState);\r\n};\r\n\r\n// username input listener\r\nusernameInput.addEventListener(\"input\", usernameStateHandler);\r\n\r\n// Password input listener\r\npasswordInput.addEventListener(\r\n  \"input\",\r\n  passwordStatehandler({\r\n    form: passwordForm,\r\n    message: \"Password is in the correct format\",\r\n    formInputState,\r\n    callback: passwordConfirmationHandler(\r\n      passwordInput,\r\n      passwordConfirmationInput,\r\n      errorContainer\r\n    ),\r\n  })\r\n);\r\n\r\n// Password Confirmation input listener\r\npasswordConfirmationInput.addEventListener(\r\n  \"input\",\r\n  passwordStatehandler({\r\n    form: passwordConfirmationForm,\r\n    message: \"Password is in the correct format\",\r\n    formInputState,\r\n    callback: passwordConfirmationHandler(\r\n      passwordInput,\r\n      passwordConfirmationInput,\r\n      errorContainer\r\n    ),\r\n  })\r\n);\r\n\r\n// Button event listener\r\neditUsernameForm.addEventListener(\r\n  \"input\",\r\n  buttonHandler({\r\n    formInputState,\r\n    formLabel,\r\n    submitButton,\r\n    passwordInput,\r\n    passwordConfirmationInput,\r\n  })\r\n);\r\n","const toggleShowPasswordHandler = (elements) => {\r\n  elements.forEach((x) => {\r\n    x.children[4].style = \"display:none\";\r\n    x.children[3].addEventListener(\"click\", (e) => {\r\n      e.target.style = \"display:none\";\r\n      x.children[4].style = \"display:block\";\r\n      x.children[1].type = \"text\";\r\n    });\r\n    x.children[4].addEventListener(\"click\", (e) => {\r\n      e.target.style = \"display:none\";\r\n      x.children[3].style = \"display:block\";\r\n      x.children[1].type = \"password\";\r\n    });\r\n  });\r\n};\r\n\r\nexport { toggleShowPasswordHandler };\r\n","const buttonHandler = (args) => {\r\n  const {\r\n    formInputState,\r\n    formLabel,\r\n    submitButton,\r\n    passwordInput,\r\n    passwordConfirmationInput,\r\n  } = args;\r\n  return (e) => {\r\n    const inputCondition = Object.entries(formInputState)\r\n      .flat()\r\n      .filter((x) => typeof x == \"boolean\")\r\n      .every((y) => y === true);\r\n\r\n    if (passwordInput && passwordConfirmationInput) {\r\n      if (\r\n        inputCondition &&\r\n        passwordInput.value == passwordConfirmationInput.value\r\n      ) {\r\n        formLabel.style = \"color: rgb(52,199,89)\";\r\n        submitButton.disabled = false;\r\n      } else {\r\n        formLabel.style = \"color:rgb(0,122,255)\";\r\n        submitButton.disabled = true;\r\n      }\r\n    } else {\r\n      if (inputCondition) {\r\n        formLabel.style = \"color: rgb(52,199,89)\";\r\n        submitButton.disabled = false;\r\n      } else {\r\n        formLabel.style = \"color:rgb(0,122,255)\";\r\n        submitButton.disabled = true;\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport { buttonHandler };\r\n"],"names":["$3e4c3e989af843c3$export$3203df9f13c7c2d5","field","usernameForm","formInputState","value","length","children","style","innerText","username","validationMessage","$3d6d5f86cecf0eff$export$55bcb16564caae5e","args","form","message","callback","e","target","validity","valid","id","$f185fd58a678aff7$export$2f1ae08c0ac6c3fe","passwordInput","passwordConfirmationInput","errorContainer","visibility","$7edefd980c509991$export$e3c7586eaf09a74a","document","getElementById","$7edefd980c509991$export$bcb34b28dae666b3","querySelector","$7edefd980c509991$export$4088352d81277aab","$7edefd980c509991$export$e7ee66837e7e9937","$7edefd980c509991$export$37c45ce1da2b2b6e","$7edefd980c509991$export$ff890a6bfef9c9c1","$7edefd980c509991$export$48d6f7351f788047","$7edefd980c509991$export$c06764e4f8af7103","$7edefd980c509991$export$9d33ba969f9b84f1","$7edefd980c509991$export$d675b3969e4857cb","$543450afc12f02fc$var$formInputState","password","passwordConfirmation","querySelectorAll","forEach","x","addEventListener","type","localStorage","getItem","setItem","formLabel","submitButton","inputCondition","Object","entries","flat","filter","every","y","disabled","$726fcf120da9e752$export$cfee2098f0a90d86"],"version":3,"file":"editusername.9850b954.js.map"}